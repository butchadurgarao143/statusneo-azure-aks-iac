name: Terraform CI/CD

# Trigger workflow on push or pull request to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  TF_IN_AUTOMATION: true

jobs:
  terraform:
    name: Terraform Validate & Plan
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]

    defaults:
      run:
        working-directory: ./envs/${{ matrix.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -input=false -backend-config=../../backend-${{ matrix.environment }}.tfvars

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

  apply:
    name: Terraform Apply (Manual Approval)
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        environment: [dev, prod]

    defaults:
      run:
        working-directory: ./envs/${{ matrix.environment }}

    steps:
      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: your-github-username
          minimum-approvals: 1
          issue-title: "Approve ${{ matrix.environment }} deployment"
          issue-body: "Please approve the deployment for ${{ matrix.environment }} environment."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -input=false -backend-config=../../backend-${{ matrix.environment }}.tfvars

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve 
